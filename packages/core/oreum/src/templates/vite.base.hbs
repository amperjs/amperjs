import { basename, resolve } from "node:path";

import { aliasPlugin, definePlugin } from "@oreum/dev";
import { loadEnv, mergeConfig, type UserConfig } from "vite";

import pkg from "./package.json" with { type: "json" };

export default async (sourceFolderPath: string, config: UserConfig) => {
  const env = loadEnv("mock", import.meta.dirname);
  const sourceFolder = basename(sourceFolderPath);
  return mergeConfig(config, {
    build: {
      outDir: resolve(import.meta.dirname, `${pkg.distDir}/${sourceFolder}`),
      emptyOutDir: true,
      sourcemap: true,
    },

    server: {
      host: true,
      allowedHosts: [env.VITE_HOSTNAME],
      fs: {
        strict: false,
      },
      watch: {
        awaitWriteFinish: {
          stabilityThreshold: 800,
          pollInterval: 200,
        },
      },
    },

    cacheDir: resolve(import.meta.dirname, `var/.vite/${sourceFolder}`),

    plugins: [
      aliasPlugin(import.meta.dirname),
      definePlugin([
        {
          // keys extracted from process.env and exposed to client
          keys: ["NODE_ENV", "DEBUG"],
        },
      ]),
    ],
  });
};
